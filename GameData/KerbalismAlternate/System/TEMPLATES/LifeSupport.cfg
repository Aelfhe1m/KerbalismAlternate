@KERBALISM_ALTERNATE_TEMPLATES:FIRST
{
  LIFE_SUPPORT
  {
    POD
    {
      PKG
      {
        MODULE
        {
          name = ProcessController
          resource = _Scrubber
          title = #KERBALISM_Scrubber_title//Scrubber
          capacity = 1 // #$/CrewCapacity$
          running = true
        }

        MODULE
        {
          name = ProcessController
          resource = _PressureControl
          title = #KERBALISM_PressureControl_title//Pressure control
          capacity = 1 // #$/CrewCapacity$
          running = true
        }

        MODULE
        {
          name = ProcessController
          resource = _WaterRecycler
          title = #KERBALISM_WaterRecycler_title//Water recycler
          capacity = 1 // #$/CrewCapacity$
          running = true
          valve_i = 6 // workaround until we have a better way to deal with dump valves
        }

        MODULE
        {
          name = ProcessController
          resource = _WasteProcessor
          title = #KERBALISM_WasteProcessor_title//Waste processor
          capacity = 1 // #$/CrewCapacity$
          running = true
        }

        MODULE
        {
          name = ProcessController
          resource = _MonopropFuelCell
          title = #KERBALISM_MonopropO2FuelCell_title//Monoprop+O2 fuel cell
          capacity = 1 // #$/CrewCapacity$
          running = false
        }

        MODULE
        {
          name = Configure
          title = Pod
          slots = 2

          UPGRADES
          {
            UPGRADE
            {
              name__ = KAlt-Upgrade-Slots
              techRequired__ = electronics
              slots = 0
            }
          }

          SETUP
          {
            name = Scrubber
            desc = #KERBALISM_Scrubber_desc//A dual-bed vacuum-exposing regenerative scrubber that sequesters <b>CarbonDioxide</b> from the internal atmosphere.
            mass = 0.01
            cost = 250

            MODULE
            {
              type = ProcessController
              id_field = resource
              id_value = _Scrubber
            }
          }

          SETUP
          {
            name = Pressure Control
            desc = #KERBALISM_PressureControl_desc//Use <b>Nitrogen</b> to maintain the internal atmosphere at a comfortable pressure.
            tech = engineering101
            mass = 0.01
            cost = 250

            MODULE
            {
              type = ProcessController
              id_field = resource
              id_value = _PressureControl
            }

            RESOURCE
            {
              // approx 5 days of leaks and volume of a crew member
              // crew going eva will need the volume their bodies displaced within the vessel replaced with N2 to correct pressure drop,
              // vise versa when entering from eva the pressure will increase due to the volume of the Kerbal displacing
              // the internal vessel atmosphere, excess is vented overboard.
      	    // The pressure controller can be disabled to save N2 that will be used replacing the Kerbals volume,
              name = Nitrogen
              amount = 1 // #$/CrewCapacity$
              maxAmount = 1 // #$/CrewCapacity$
              @amount *= 331.3  // 1.3 for leaks, 330 Kerbal volume
              @maxAmount *= 331.3
            }
          }

          SETUP
          {
            name = Water Recycler
            desc = #KERBALISM_WaterRecycler_desc//Filter impurities out of <b>WasteWater</b>.
            tech = spaceExploration
            mass = 0.05
            cost = 500


            MODULE
            {
              type = ProcessController
              id_field = resource
              id_value = _WaterRecycler
            }

            RESOURCE
            {
              name = WasteWater
              amount = 0
              maxAmount = 1 // #$/CrewCapacity$
              @maxAmount *= 5
            }
          }

          SETUP
          {
            name = Waste Processor
            desc = #KERBALISM_WasteProcessor_desc//Extract <b>Ammonia</b> out of decomposing organic <b>Waste</b>.
            tech = advExploration
            mass = 0.05
            cost = 500

            MODULE
            {
              type = ProcessController
              id_field = resource
              id_value = _WasteProcessor
            }

            RESOURCE
            {
              name = Waste
              amount = 0
              maxAmount = 1 // #$/CrewCapacity$
              @maxAmount *= 5
            }
          }

          SETUP
          {
            name = Monoprop Oxygen Fuel Cell
            desc = #KERBALISM_MonopropO2FuelCell_desc//An emergency fuel cell that burns <b>MonoPropellant</b> and <b>Oxygen</b> gas, producing <b>Water</b> and <b>Nitrogen</b> gas as by-products.
            tech = engineering101
            mass = 0.1
            cost = 1000

            MODULE
            {
              type = ProcessController
              id_field = resource
              id_value = _MonopropFuelCell
            }
          }

          SETUP
      		{
      			name = None
      			desc = #KERBALISM_None_desc//Empty slot for mass and cost savings.
      		}
        }
      }
    }

    SUPPLY_CONTAINER
    {
      MODULE
      {
        name = Configure
        title = Supply Container
        slots = 1
        symmetric = true

        SETUP
        {
          name = Supplies  //  Ratio of Food and Water amounts are the same as a Kerbals intake
          desc = #KERBALISM_SupplyContainer_desc//Store a balanced supply of <b>Food</b> and <b>Water</b>.

          RESOURCE
          {
            name = Food
            amount = 0.7221584 // * #$/ContainerVolume$
            maxAmount = 0.7221584 // * #$/ContainerVolume$
          }

          RESOURCE
          {
            name = Water
            amount = 0.2778416 // * #$/ContainerVolume$
            maxAmount = 0.2778416 // * #$/ContainerVolume$
          }
        }

        SETUP
        {
          name = Food

          RESOURCE
          {
            name = Food
            amount = 1 // * #$/ContainerVolume$
            maxAmount = 1 // * #$/ContainerVolume$
          }
        }

        SETUP
        {
          name = Water

          RESOURCE
          {
            name = Water
            amount = 1 // * #$/ContainerVolume$
            maxAmount = 1 // * #$/ContainerVolume$
          }
        }

        SETUP
        {
          name = Sewage  //  Ratio of Waste and WasteWater amounts are the same as a Kerbals output
          desc = #KERBALISM_SupplyContainer_desc2//Store solid and liquid organic <b>Waste</b>.

          RESOURCE
          {
            name = Waste
            amount = 0 // * #$/ContainerVolume$
            maxAmount = 0.4946378 // * #$/ContainerVolume$
          }

          RESOURCE
          {
            name = WasteWater
            amount = 0 // * #$/ContainerVolume$
            maxAmount = 0.5053622 // * #$/ContainerVolume$
          }
        }

        SETUP
        {
          name = Waste

          RESOURCE
          {
            name = Waste
            amount = 0 // * #$/ContainerVolume$
            maxAmount = 1 // * #$/ContainerVolume$
          }
        }

        SETUP
        {
          name = WasteWater

          RESOURCE
          {
            name = WasteWater
            amount = 0  // * #$/ContainerVolume$
            maxAmount = 1 // * #$/ContainerVolume$
          }
        }
      }
    }

    SUPPLY_CYLINDER
    {
      PKG
      {
        MODULE
        {
          name = Configure
          title = Pressurized Tank
          slots = 1
          symmetric = true

          SETUP
          {
            name = Oxygen  // Stored at 200 bar (2940psi) when full
            desc = #KERBALISM_PressurizedTank_desc//Store pressurized <b>Oxygen</b> gas @ 200 bar.

            RESOURCE
            {
              name = Oxygen
              amount = 200 // *= #$/ContainerVolume$
              maxAmount = 200 // *= #$/ContainerVolume$
            }
          }

          SETUP
          {
            name = Nitrogen  // Stored at 180 bar (2646psi) when full
            desc = #KERBALISM_PressurizedTank_desc2//Store pressurized <b>Nitrogen</b> gas @ 180 bar.

            RESOURCE
            {
              name = Nitrogen
              amount = 180 // *= #$/ContainerVolume$
              maxAmount = 180 // *= #$/ContainerVolume$
            }
          }

          SETUP
          {
            name = Hydrogen  // Stored at 700 bar (10290psi) when full
            desc = #KERBALISM_PressurizedTank_desc3//Store pressurized <b>Hydrogen</b> gas @ 700 bar.

            RESOURCE
            {
              name = Hydrogen
              amount = 700 // *= #$/ContainerVolume$
              maxAmount = 700 // *= #$/ContainerVolume$
            }
          }

          SETUP
          {
            name = Ammonia  // Stored at 35 bar (515psi) when full
            desc = #KERBALISM_PressurizedTank_desc4//Store pressurized <b>Ammonia</b> gas @ 35 bar.

            RESOURCE
            {
              name = Ammonia
              amount = 35 // *= #$/ContainerVolume$
              maxAmount = 35 // *= #$/ContainerVolume$
            }
          }

          SETUP
          {
            name = CarbonDioxide  // Stored at 60bar (882psi) when full
            desc = #KERBALISM_PressurizedTank_desc5//Store pressurized <b>Carbon dioxide</b> gas @ 60 bar.

            RESOURCE
            {
              name = CarbonDioxide
              amount = 60 // *= #$/ContainerVolume$
              maxAmount = 60 // *= #$/ContainerVolume$
            }
          }

          SETUP
          {
            name = Xenon Gas  // Stored at 85 bar (1250psi) when full
      						// see https://www.cobham.com/mission-systems/composite-pressure-solutions/space-systems/xenon-propellant-tank-datasheet/
            desc = #KERBALISM_PressurizedTank_desc6//Store pressurized <b>Xenon</b> gas @ 85 bar.
            tech = ionPropulsion

            RESOURCE
            {
              name = XenonGas
              amount = 85 // *= #$/ContainerVolume$
              maxAmount = 85 // *= #$/ContainerVolume$
            }
          }
        }
      }
    }
  }
