@PART[kerbalism-greenhouse]:NEEDS[FeatureComfort]:FOR[KerbalismAlternate]
{
  %KAlt_Comfort_Plants = true
}
@PART[kerbalism-greenhouse]:NEEDS[FeatureHabitat]:FOR[KerbalismAlternate]
{
	%MODULE[Habitat]
	{
		%toggle = false
		%volume = 18.0
		%surface = 31.0
	}
}

@PART[kerbalism-gravityring]:NEEDS[FeatureHabitat]:FOR[KerbalismAlternate]
{
  @mass = 3.5

	@MODULE[Habitat]
	{
		state = disabled
		volume = 65.0
		surface = 95.0
	}
}

// ============================================================================
// Add Reliability module to supported parts
// ============================================================================

@PART[kerbalism-lifesupportmodule]:NEEDS[ProfileDefault,FeatureReliability]:FOR[KerbalismAlternate]
{
	MODULE
	{
		name = Reliability
		type = ProcessController
		title = ECLSS
		redundancy = Life Support
		repair = true // anyone
		mtbf = 72576000 // in seconds
		extra_cost = 2.5
		extra_mass = 0.1
	}
}

@PART[kerbalism-activeshield]:NEEDS[ProfileDefault,FeatureReliability]:FOR[KerbalismAlternate]
{
	MODULE
	{
		name = Reliability
		type = Emitter
		title = Shield
		repair = Engineer
		mtbf = 72576000
		extra_cost = 2.5
		extra_mass = 0.1
	}
}



// ======================================================================
// adds sensors to gravioli/radiation/temperature/pressure to all parts that use
// the stock experiments and do not already have one.
// ============================================================================
@PART[*]:HAS[!MODULE[Sensor]:HAS[#type[radiation]],@MODULE[Experiment]:HAS[#experiment_id[geigerCounter]]]:NEEDS[FeatureScience]:FOR[zProfileAlternate]
{
	!MODULE[ModuleEnviroSensor] {}
	MODULE
	{
		name = Sensor
		type = radiation
	}
}

// ============================================================================
// Set generic part tags
// ============================================================================

@PART[kerbalism-*]:FOR[ProfileAlternate] { %tags = _kerbalism }
@PART[kerbalism-greenhouse,kerbalism-container-*,kerbalism-lifesupportmodule]:FOR[ProfileAlternate] { %tags = #$tags$ life support }

// ============================================================================
// Set part specific tags
// ============================================================================

@PART[kerbalism-activeshield]:FOR[ProfileAlternate] { %tags = #$tags$ magnetic field radiation shield }
@PART[kerbalism-chemicalplant]:FOR[ProfileAlternate] { %tags = #$tags$ external chemical plant electrolysis o2 oxygen h2 hydrogen h2o water sabatier haber liquidfuel nh3 ammonia waste incinerator compressor anthraquinone hydrazine mre soe sco }
@PART[kerbalism-lifesupportmodule]:FOR[ProfileAlternate] { %tags = #$tags$ external eclss scrubber pressure control atmosphere wasteatmosphere o2 oxygen nitrogen co2 carbondioxide h2o water recycler waste processor fuelcell fuel cell monoprop }
@PART[kerbalism-geigercounter]:FOR[ProfileAlternate] { %tags = #$tags$ geiger counter science sensor }
@PART[kerbalism-gravityring]:FOR[ProfileAlternate] { %tags = #$tags$ habitat crew gravity rotate comfort }
@PART[kerbalism-greenhouse]:FOR[ProfileAlternate] { %tags = #$tags$ habitat crew greenhouse food crop hydroponic co2 carbondioxide waste atmosphere wasteatmosphere h2o water o2 oxygen }
@PART[kerbalism-minipump]:FOR[ProfileAlternate] { %tags = #$tags$ harvest extract pump h2o water nitrogen nh3 ammonia }
@PART[kerbalism-radialpump]:FOR[ProfileAlternate] { %tags = #$tags$ harvest extract pump h2o water nitrogen nh3 ammonia }
@PART[kerbalism-container-radial-*]:FOR[ProfileAlternate] { %tags = #$tags$ tank pressurized o2 oxygen nitrogen h2 hydrogen nh3 ammonia co2 carbondioxide xenon }
@PART[kerbalism-container-inline-*]:FOR[ProfileAlternate] { %tags = #$tags$ tank pressurized o2 oxygen water food sewage waste }
@PART[kerbalism-antenna]:FOR[ProfileAlternate] { %tags = #$tags$ antenna }

// ============================================================================
// hide disabled parts in editor
// ============================================================================
@PART[kerbalism-*]:HAS[#disabled[true]]:FOR[ProfileAlternate]
{
  !tags = _
  @category = none
  %TechHidden = True
}

// ============================================================================
// Add configurable supplies to inline containers
// ============================================================================

// container volume is in Liters, calculated from the containers size and stored in the parts .cfg file
// amount and maxAmount are percentages of a full container at atmospheric pressure, e.g. 1 = 100%, 0.5 = 50%, 5 = 500% (or pressurized to 5 bar)

@PART[kerbalism-container-inline-*,kerbalism-container-hex-*,kerbalism-container-radial-box-*]:NEEDS[ProfileAlternate]:FOR[KerbalismAlternate]
{
  MODULE
  {
    name = Configure
    title = Supply Container
    slots = 1
    symmetric = true

    SETUP
    {
      name = Supplies  //  Ratio of Food and Water amounts are the same as a Kerbals intake
      desc = #KERBALISM_SupplyContainer_desc//Store a balanced supply of <b>Food</b> and <b>Water</b>.

      RESOURCE
      {
        name = Food
        amount = 0.7221584
        maxAmount = 0.7221584
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }

      RESOURCE
      {
        name = Water
        amount = 0.2778416
        maxAmount = 0.2778416
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Food

      RESOURCE
      {
        name = Food
        amount = 1
        maxAmount = 1
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Water

      RESOURCE
      {
        name = Water
        amount = 1
        maxAmount = 1
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Sewage  //  Ratio of Waste and WasteWater amounts are the same as a Kerbals output
      desc = #KERBALISM_SupplyContainer_desc2//Store solid and liquid organic <b>Waste</b>.

      RESOURCE
      {
        name = Waste
        amount = 0
        maxAmount = 0.4946378
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }

      RESOURCE
      {
        name = WasteWater
        amount = 0
        maxAmount = 0.5053622
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Waste

      RESOURCE
      {
        name = Waste
        amount = 0
        maxAmount = 1
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = WasteWater

      RESOURCE
      {
        name = WasteWater
        amount = 0
        maxAmount = 1
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }
  }
}


// ============================================================================
// Add configurable supplies to radial containers
// ============================================================================

// container volume is in Liters, calculated from the containers size and stored in the parts .cfg file
// amount and maxAmount are percentages of a full container at atmospheric pressure, e.g. 1 = 100%, 0.5 = 50%, 5 = 500% (or pressurized to 5 bar)

@PART[kerbalism-container-radial-pressurized-*,kerbalism-container-radial-big,kerbalism-container-radial-huge,kerbalism-container-radial-medium,kerbalism-container-radial-small]:NEEDS[ProfileAlternate]:FOR[KerbalismAlternate]
{
  MODULE
  {
    name = Configure
    title = Pressurized Tank
    slots = 1
    symmetric = true

    SETUP
    {
      name = Oxygen  // Stored at 200 bar (2940psi) when full
      desc = #KERBALISM_PressurizedTank_desc//Store pressurized <b>Oxygen</b> gas @ 200 bar.

      RESOURCE
      {
        name = Oxygen
        amount = 200
        maxAmount = 200
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Nitrogen  // Stored at 180 bar (2646psi) when full
      desc = #KERBALISM_PressurizedTank_desc2//Store pressurized <b>Nitrogen</b> gas @ 180 bar.

      RESOURCE
      {
        name = Nitrogen
        amount = 180
        maxAmount = 180
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Hydrogen  // Stored at 700 bar (10290psi) when full
      desc = #KERBALISM_PressurizedTank_desc3//Store pressurized <b>Hydrogen</b> gas @ 700 bar.

      RESOURCE
      {
        name = Hydrogen
        amount = 700
        maxAmount = 700
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Ammonia  // Stored at 35 bar (515psi) when full
      desc = #KERBALISM_PressurizedTank_desc4//Store pressurized <b>Ammonia</b> gas @ 35 bar.

      RESOURCE
      {
        name = Ammonia
        amount = 35
        maxAmount = 35
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = CarbonDioxide  // Stored at 60bar (882psi) when full
      desc = #KERBALISM_PressurizedTank_desc5//Store pressurized <b>Carbon dioxide</b> gas @ 60 bar.

      RESOURCE
      {
        name = CarbonDioxide
        amount = 60
        maxAmount = 60
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }

    SETUP
    {
      name = Xenon Gas  // Stored at 85 bar (1250psi) when full
						// see https://www.cobham.com/mission-systems/composite-pressure-solutions/space-systems/xenon-propellant-tank-datasheet/
      desc = #KERBALISM_PressurizedTank_desc6//Store pressurized <b>Xenon</b> gas @ 85 bar.
      tech = ionPropulsion

      RESOURCE
      {
        name = XenonGas
        amount = 85
        maxAmount = 85
        @amount *= #$/ContainerVolume$
        @maxAmount *= #$/ContainerVolume$
      }
    }
  }
}

@PART[kerbalism-gravityring]:NEEDS[ProfileAlternate]:FOR[KerbalismAlternate]
{
  %CrewCapacity = 6
}



// ============================================================================
// Avoid some harmless warning during part loading
// ============================================================================

@PART[kerbalism-container-*]:LAST[zProfileAlternate] { !ContainerVolume = _ }
