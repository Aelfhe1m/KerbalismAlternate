@KERBALISM_ALTERNATE_TEMPLATES:FIRST
{
  PUMP
  {
    // !MODULE[ModuleResourceHarvester] {}
    // !MODULE[ModuleOverheatDisplay] {}
    // !MODULE[ModuleCoreHeat] {}
    // !MODULE[ModuleAsteroidDrill] {}

    // Oceanic - - -
    MODULE
    {
      name = Harvester
      title = #KERBALISM_WaterPump_title//Water Pump
      type = 1
      resource = Water
      min_abundance = 0.02
      rate = 0.003
      ec_rate = 1.0
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_NitrogenPump_title//Nitrogen Pump
      type = 1
      resource = Nitrogen
      min_abundance = 0.02
      rate = 0.0025
      ec_rate = 1.0
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_AmmoniaPump_title//Ammonia Pump
      type = 1
      resource = Ammonia
      min_abundance = 0.02
      rate = 0.0025
      ec_rate = 1.0
    }

    MODULE
    {
      name = Configure
      title = Pump
      slots = 1

      SETUP
      {
        name = Water Extraction
        desc = #KERBALISM_WaterExcavation_desc2//Extract <b>Water</b> from the ocean.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Water
        }

        RESOURCE
        {
          name = Water
          amount = 0
          maxAmount = 50
        }
      }

      SETUP
      {
        name = Nitrogen Extraction
        desc = #KERBALISM_NitrogenExcavation_desc2//Extract <b>Nitrogen</b> from the ocean.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Nitrogen
        }

        RESOURCE
        {
          name = Nitrogen
          amount = 0
          maxAmount = 50
        }
      }

      SETUP
      {
        name = Ammonia Extraction
        desc = #KERBALISM_AmmoniaExtraction_desc//Extract <b>Ammonia</b> from the ocean.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Ammonia
        }

        RESOURCE
        {
          name = Ammonia
          amount = 0
          maxAmount = 50
        }
      }
    }

    MODULE:NEEDS[FeatureReliability]
    {
      name = Reliability
      type = Harvester
      title = #KERBALISM_Harvester_title//Harvester
      repair = Engineer
      mtbf = 72576000
      extra_cost = 1.0
      extra_mass = 0.2
    }
  }

  DRILL
  {
    // !MODULE[ModuleResourceHarvester] {}
    // !MODULE[ModuleOverheatDisplay] {}
    // !MODULE[ModuleCoreHeat] {}

    // Crustal - - -
    MODULE
    {
      name = Harvester
      title = #KERBALISM_WaterExcavation_title//Water Excavation
      type = 0
      resource = Water
      min_abundance = 0.01
      // https://www.nasa.gov/sites/default/files/atoms/files/mars_ice_drilling_assessment_v6_for_public_release.pdf shows
      // water harvesters from Ice at a rate of 50-400 L/day, as a middle ground we choose 65 L/day for the small harvester
      // which when scaled by factor 5 for the big harvester becomes 325 L/day.
      rate = 0.003 // 65 L/day / (6 hours/day * 3600 seconds/hour)
      // This is the maximum abundance on a random planet/moon
      // And the average on Duna poles, which are the only place where at the time writing higher than baseline water levels are modeled
      // And lower than what is found on Kerbin and Laythe
      abundance_rate = 0.1
      ec_rate = 1.0
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_OreExcavation_title//Ore Excavation
      type = 0
      resource = Ore
      min_abundance = 0.02
      rate = 0.0025
      ec_rate = 1.0
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_NitrogenExcavation_title//Nitrogen Excavation
      type = 0
      resource = Nitrogen
      min_abundance = 0.02
      rate = 0.0025
      ec_rate = 1.0
    }

    MODULE
    {
      name = Configure
      title = Drill
      slots = 1

      SETUP
      {
        name = Water Extraction
        desc = #KERBALISM_WaterExcavation_desc//Extract <b>Water</b> from the surface.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Water
        }

        RESOURCE
        {
          name = Water
          amount = 0
          maxAmount = 50
        }
      }

      SETUP
      {
        name = Ore Extraction
        desc = #KERBALISM_OreExcavation_desc//Extract <b>Ore</b> from the surface.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Ore
        }

        RESOURCE
        {
          name = Ore
          amount = 0
          maxAmount = 50
        }
      }

      SETUP
      {
        name = Nitrogen Extraction
        desc = #KERBALISM_NitrogenExcavation_desc//Extract <b>Nitrogen</b> from the surface.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Nitrogen
        }

        RESOURCE
        {
          name = Nitrogen
          amount = 0
          maxAmount = 50
        }
      }
    }

    MODULE:NEEDS[FeatureReliability]
    {
      name = Reliability
      type = Harvester
      title = #KERBALISM_Harvester_title//Harvester
      repair = Engineer
      mtbf = 72576000
      extra_cost = 1.0
      extra_mass = 0.2
    }
  }

  // MiniDrill + kerbalism-minipump
  // @MODULE[Harvester],*
  // {
  //   drill = ImpactTransform
  //   length = 1.08
  // }

  // RadialDrill + kerbalism-radialpump
  // @MODULE[Harvester],*
  // {
  //   drill = ImpactTransform
  //   length = 5.42
  //   @rate *= 5
  //   @ec_rate *= 5
  // }

  ATMOSPHERIC_HARVESTER // added to sensorAtmosphere
  {
    MODULE
    {
      name = Harvester
      title = #KERBALISM_CO2Filter_title//CO2 Filter
      type = 2
      resource = CarbonDioxide
      min_abundance = 0.0025
      min_pressure = 4.0
      rate = 0.2
      ec_rate = 0.5
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_OxygenFilter_title//Oxygen Filter
      type = 2
      resource = Oxygen
      min_abundance = 0.02
      min_pressure = 5.0
      rate = 0.25
      ec_rate = 0.5
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_NitrogenFilter_title//Nitrogen Filter
      type = 2
      resource = Nitrogen
      min_abundance = 0.01
      min_pressure = 2.0
      rate = 0.35
      ec_rate = 0.5
    }

    MODULE
    {
      name = Harvester
      title = #KERBALISM_AmmoniaFilter_title//Ammonia Filter
      type = 2
      resource = Ammonia
      min_abundance = 0.01
      min_pressure = 2.0
      rate = 0.35
      ec_rate = 0.5
    }

    MODULE
    {
      name = Configure
      title = Atmospheric Filter
      slots = 1

      SETUP
      {
        name = CO2 Filter
        desc = #KERBALISM_CO2Filter_desc//Extract <b>CO2</b> from the atmosphere.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = CarbonDioxide
        }
      }

      SETUP
      {
        name = Oxygen Filter
        desc = #KERBALISM_OxygenFilter_desc//Extract <b>Oxygen</b> from the atmosphere.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Oxygen
        }
      }

      SETUP
      {
        name = Nitrogen Filter
        desc = #KERBALISM_NitrogenFilter_desc//Extract <b>Nitrogen</b> from the atmosphere.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Nitrogen
        }
      }

      SETUP
      {
        name = Ammonia Filter
        desc = #KERBALISM_AmmoniaFilter_desc//Extract <b>Ammonia</b> from the atmosphere.

        MODULE
        {
          type = Harvester
          id_field = resource
          id_value = Ammonia
        }
      }
    }

    MODULE:NEEDS[FeatureReliability]
    {
      name = Reliability
      type = Harvester
      title = #KERBALISM_Harvester_title//Harvester
      repair = Engineer
      mtbf = 72576000
      extra_cost = 1.0
      extra_mass = 0.5
    }
  }

  CHEMICAL_PLANT
  {
    // !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]] {}
    // !MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]] {}
    // !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]] {}
    // !MODULE[ModuleResourceConverter]:HAS[#ConverterName[Monoprop]] {}
    // !MODULE[ModuleResourceConverter]:HAS[#ConverterName[MonoPropellant]] {}
    // !MODULE[ModuleOverheatDisplay] {}
    // !MODULE[ModuleCoreHeat] {}

    MODULE
    {
      name = ProcessController
      resource = _WaterElectrolysis
      title = #KERBALISM_WaterElectrolysis_title//Water electrolysis
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _Sabatier
      title = #KERBALISM_SabatierProcess_title//Sabatier process
      capacity = 1
      valve_i = 2 // workaround until we have a better way to deal with dump valves
    }

    MODULE
    {
      name = ProcessController
      resource = _Haber
      title = #KERBALISM_HaberProcess_title//Haber process
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _WasteIncinerator
      title = Waste incinerator
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _WasteCompressor
      title = #KERBALISM_WasteCompressor_title//Waste compressor
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _Anthraquinone
      title = #KERBALISM_AnthraquinoneProcess_title//Anthraquinone process
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _HydrazineProduction
      title = #KERBALISM_HydrazineProduction_title//Hydrazine production
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _NitroHydrazine
      title = #KERBALISM_HydrazineProductionN2_title//Hydrazine production N2
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _MRE
      title = #KERBALISM_MoltenRegolithElectrolysis_title//MRE
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _SOE
      title = #KERBALISM_SolidOxideElectrolysis_title//SOE
      capacity = 1
    }

    MODULE
    {
      name = ProcessController
      resource = _SCO
      title = #KERBALISM_SelectiveCatalyticOxidation_title//SCO
      capacity = 1
    }

    MODULE
    {
      name = Configure
      title = Chemical Plant
      slots = 1

      UPGRADES
      {
        UPGRADE
        {
          name__ = Upgrade-Slots
          techRequired__ = electronics
          slots = 1
        }
      }

      SETUP
      {
        name = Water Electrolysis
        desc = #KERBALISM_WaterElectrolysis_desc//Split <b>Water</b> into its <b>Hydrogen</b> and <b>Oxygen</b> components.

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _WaterElectrolysis
        }
      }

      SETUP
      {
        name = Sabatier Process
        desc = #KERBALISM_SabatierProcess_desc//<b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>LiquidFuel</b>.

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _Sabatier
        }
      }

      SETUP
      {
        name = Haber Process
        desc = #KERBALISM_HaberProcess_desc//Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _Haber
        }
      }

      SETUP
      {
        name = Waste Incinerator
        desc = #KERBALISM_WasteIncinerator_desc//Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
        tech = precisionEngineering

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _WasteIncinerator
        }
      }

      SETUP
      {
        name = Waste Compressor
        desc = #KERBALISM_WasteCompressor_desc//Compact <b>Waste</b> to the density of <b>shielding material</b>.
        tech = precisionEngineering

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _WasteCompressor
        }
      }

      SETUP
      {
        name = Anthraquinone Process
        desc = #KERBALISM_AnthraquinoneProcess_desc//Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
        tech = advScienceTech

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _Anthraquinone
        }
      }

      SETUP
      {
        name = Hydrazine Production
        desc = #KERBALISM_HydrazineProduction_desc//<b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
        tech = advScienceTech

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _HydrazineProduction
        }
      }

      SETUP
      {
        name = Hydrazine Production (N2 Injection)
        desc = #KERBALISM_HydrazineProductionN2_desc//<b>Oxidizer</b> and <b>Ammonia</b> with <b>Nitrogen</b> injection react to produce <b>MonoPropellant</b> and <b>Oxygen</b>.
        tech = experimentalScience

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _NitroHydrazine
        }
      }

      SETUP
      {
        name = Solid Oxide Electrolysis
        desc = #KERBALISM_SolidOxideElectrolysis_desc//Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
        tech = experimentalScience

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _SOE
        }
      }

      SETUP
      {
        name = Molten Regolith Electrolysis
        desc = #KERBALISM_MoltenRegolithElectrolysis_desc//Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
        tech = advScienceTech

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _MRE
        }
      }

      SETUP
      {
        name = Selective Catalytic Oxidation
        desc = #KERBALISM_SelectiveCatalyticOxidation_desc//<b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
        tech = experimentalScience

        MODULE
        {
          type = ProcessController
          id_field = resource
          id_value = _SCO
        }
      }
    }

    MODULE:NEEDS[FeatureReliability]
    {
      name = Reliability
      type = ProcessController
      title = #KERBALISM_ChemicalPlant_title//Chemical Plant
      repair = Engineer
      mtbf = 72576000
      extra_cost = 1.0
      extra_mass = 0.2
    }
  }

  MiniISRU
  {
    // @MODULE[ProcessController],*
    // {
    //   @capacity *= 36.0      //  2.0 * 18  (MiniISRU is 18 times bigger than the kerbalism-chemicalplant)
    // }
  }

  StockISRU
  {
    // @MODULE[ProcessController],*
    // {
    //   @capacity *= 90.0     //  36.0 * 5 / 2  (ISRU is 5 times bigger than the MiniISRU but has double the slots)
    // }
    //
    // @MODULE[Configure]:HAS[#title[Chemical?Plant]]
    // {
    //   %slots = 2
    // }
  }

  kerbalism-chemicalplant
  {
    // @MODULE[ProcessController],*
    // {
    //   @capacity *= 2.0
    // }
  }
}
